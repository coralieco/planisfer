$('#page-result-container').html('<%= j render "results" %>')

<% content_for(:after_js) do %>

    $(document).ready(function() {
      if($(window).width() <= 1024){
        $('.selected').removeClass('selected');
      }
    })


    $(document).ready(function() {

      $('.slider').on('click', function() {
        $('#searchForm').submit();
      })

      $('.filtered-city').on('click', function() {
        setTimeout(function() {
          $('#citysearchForm').submit();
        }, 100)
      })

      var handler = Gmaps.build('Google');

      handler.buildMap({
        provider: {
          scrollwheel: false,
          styles: [
            {"featureType":"administrative","elementType":"labels.text","stylers":[{"color":"#444444"}, {"visibility":"off"}]},
            // {"featureType":"administrative.province","elementType":"labels.text","stylers":[{"color":"#444444"}, {"visibility":"on"}]},
            {"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},
            {"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},
            {"featureType":"road","elementType":"all","stylers":[{"saturation":-100},{"lightness":45}]},
            {"featureType":"road.highway","elementType":"all","stylers":[{"visibility":"simplified"}]},
            {"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"visibility":"off"}]},
            {"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},
            {"featureType":"water","elementType":"all","stylers":[{"color":"#46bcec"},{"visibility":"on"}]}
          ]
        },
        internal: { id: 'map' }}, function() {
          markers = handler.addMarkers( <%= raw @initial_markers.to_json %> );
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();

          for (var i = 0; i < markers.length; i++) {
            var selectedMarker = markers[i];
            //create an options object
            var testTooltipHtml = selectedMarker.serviceObject.title ;
            var tooltipOptions={ marker:selectedMarker, content:testTooltipHtml};
            // create the tooltip
            var tooltip = new Tooltip(tooltipOptions);
          };

        },
      );


      $('.result-card').mouseenter('click', function(e) {
        e.preventDefault();
        $('.cardContainer.selected').removeClass('selected');
        $(this).children('.cardContainer').addClass('selected');
        var tripId = $(this).data('trip-id');
        var colours = $(this).data('colours');
        //
        $.ajax({
          type: "GET",
          url: '/trips/' + tripId + '/refresh_map',
          data: {airport_colours: colours},
          dataType: "json",
          success: function(result) {
            console.log(result);
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
              handler.removeMarkers(markers);
            }
            markers = handler.addMarkers(result);
          }
        })

        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
      })

      $('.result-card').mouseleave('click', function(e) {
        e.preventDefault();
        setTimeout(function() {
          var tripId = $(this).data('trip-id');
          handler.removeMarkers(markers);
          markers = handler.addMarkers( <%= raw @initial_markers.to_json %> );
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
        }, 100);
      })

      $('.filtered-city').mouseenter('click', function(e) {
        e.preventDefault();
          var airportId = $(this).data('airport-id');
          console.log(airportId);
          //
          $.ajax({
            type: "GET",
            url: '/airports/' + airportId + '/highlight_airport',
            dataType: "json",
            success: function(result) {
              console.log(result);
              for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
                handler.removeMarkers(markers);
              }
              markers = handler.addMarkers(result);
            }
          })
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
      })

      $('.filtered-city').mouseleave('click', function(e) {
        e.preventDefault();
        setTimeout(function() {
          var airportId = $(this).data('airport-id');
          handler.removeMarkers(markers);
          markers = handler.addMarkers( <%= raw @initial_markers.to_json %> );
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
        }, 0);
      })


      $('#car_wait_modal').on('show.bs.modal', function(e) {
        //get data-id attribute of the clicked element
        var tripId = $(e.relatedTarget).data('trip-id');
        $('.no-car-link').on('click', function(event){
          $(this).attr('href', '/orders/?trip_id=' + tripId);
        });
      });


      $('.poi-card').on('mouseenter click', function(e) {
        e.preventDefault();
        var poiId = $(this).data('poi');
        var regionId = $(this).data('region');
        $.ajax({
          type: "GET",
          url: '/pois/' + poiId + '/highlight_poi',
          data: {region_id: regionId},
          dataType: "json",
          success: function(result) {
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
              handler.removeMarkers(markers);
            }
            markers = handler.addMarkers(result);
            var marker = markers[0];
            new google.maps.event.trigger( marker.serviceObject, 'click' );
          }
        })
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
      })

      $("#more-flights").click(function() {
        $("#see-more-flights").toggleClass("hidden");
        $("#hide-more-flights").toggleClass("hidden");
        $(".the-hidden-results").toggleClass("hidden");
      })
    });



    $(document).ready(function() {
      $('.filtered-city').on('click', function(event) {
        $(this).toggleClass('city-selected');
        update_form_selected_cities();
      });
      $(".filtered-city").removeClass("city-selected");
      <% @selected_airports.each do |airport| %>
      $(".filtered-city[data-city=<%= airport.cityname %>]").addClass("city-selected");
      <% end %>
    });
    function update_form_selected_cities() {
      var selected_cities = "";
      $(".city-selected").each(function( index ) {
        selected_cities = selected_cities + $(this).text() + ",";
      });
      selected_cities = selected_cities.slice(0,-1); //remove last coma
      $('#selected-cities').val(selected_cities);
      console.log(selected_cities)
    }

    function showhide(id) {
      var e = document.getElementById(id);
      if ($('#' + e.id).hasClass('not-displayed')) {
        $("#more-flights").addClass("hidden");
        $('#' + e.id).slideDown('slow');
        $('#' + e.id).removeClass('not-displayed')
        $("#see-filters").addClass("hidden");
        $("#hide-filters").removeClass("hidden");
      } else {
        $('#' + e.id).slideUp('slow');
        $('#' + e.id).addClass('not-displayed')
        $("#see-filters").removeClass("hidden");
        $("#hide-filters").addClass("hidden");
        $("#more-flights").removeClass("hidden");
      };
    };

    $('#flight1_range, #flight2_range').slider({
      formatter: function(value) {
        if (value < 12){
          return value + 'am';
        }
        else if (value == 12){
          return "noon";
        }
        else {
          return value - 12 +'pm';
        }
      }
    });



    $(document).ready(function() {
      $('.result-card').on('click', function(event) {
        setTimeout(function() {
          $('#car1').removeClass('hidden');
        }, 500)
        setTimeout(function() {
          $('#car2').removeClass('hidden');
          $('#car5').removeClass('hidden');
        }, 1000)
        setTimeout(function() {
          $('#car7').removeClass('hidden');
        }, 1300)
        setTimeout(function() {
          $('#car12').removeClass('hidden');
          $('#car10').removeClass('hidden');
        }, 2100)
         setTimeout(function() {
          $('#car6').removeClass('hidden');
        }, 2400)
         setTimeout(function() {
          $('#car11').removeClass('hidden');
          $('#car3').removeClass('hidden');
          $('#car8').removeClass('hidden');
        }, 3000)
         setTimeout(function() {
          $('#car4').removeClass('hidden');
        }, 3300)
         setTimeout(function() {
          $('#car9').removeClass('hidden');
        }, 4000)


        setTimeout(function() {
          $('#wait1').addClass('hidden');
          $('#text2').removeClass('light');
          $('#text1').addClass('light');
          $('#checked1').removeClass('hidden');
        }, 3000)

        setTimeout(function() {
          $('#wait2').addClass('hidden');
          $('#text2').addClass('light');
          $('#text3').removeClass('light');
          $('#checked2').removeClass('hidden');
        }, 7000)

      })
    })


  // create a constructor
    function Tooltip(options) {
      // Now initialize all properties.
      this.marker_ = options.marker;
      this.content_ = options.content;
      this.map_ = options.marker.serviceObject.map;
      this.cssClass_ = options.cssClass||null;
      // We define a property to hold the content's
      // div. We'll actually create this div
      // upon receipt of the add() method so we'll
      // leave it null for now.
      this.div_ = null;
      //Explicitly call setMap on this overlay
      this.setMap(this.map_);
      var me = this;
      // Show tooltip on mouseover event.
      me.show();
      // Hide tooltip on mouseout event.

    }

    // Now we extend google.maps.OverlayView()
    Tooltip.prototype = new google.maps.OverlayView();
    // onAdd is one of the functions that we must implement,
    // it will be called when the map is ready for the overlay to be attached.
    Tooltip.prototype.onAdd = function() {
      // Create the DIV and set some basic attributes.
      var div = document.createElement('DIV');
      div.style.position = "absolute";
      // Hide tooltip
      // div.style.visibility = "hidden";
      if(this.cssClass_)
      div.className += " "+this.cssClass_;
      //Attach content to the DIV.
      div.innerHTML = this.content_;
      // Set the overlay's div_ property to this DIV
      this.div_ = div;
      // We add an overlay to a map via one of the map's panes.
      // We'll add this overlay to the floatPane pane.
      var panes = this.getPanes();
      panes.floatPane.appendChild(this.div_);
    }

    // We here implement draw
    Tooltip.prototype.draw = function() {
    // Position the overlay. We use the position of the marker
    // to peg it to the correct position, just northeast of the marker.
    // We need to retrieve the projection from this overlay to do this.
    var overlayProjection = this.getProjection();
    // Retrieve the coordinates of the marker
    // in latlngs and convert them to pixels coordinates.
    // We'll use these coordinates to place the DIV.
    var ne = overlayProjection.fromLatLngToDivPixel(this.marker_.serviceObject.position);
    // Position the DIV.
    var div = this.div_;
    div.style.left = ne.x + 'px';
    div.style.top = ne.y + 'px';
    }

    Tooltip.prototype.show = function() {
      if (this.div_) {
        this.div_.style.visibility = "visible";
      }
    }

<% end %>













